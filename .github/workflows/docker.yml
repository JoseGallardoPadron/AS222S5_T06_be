name: SonarCloud & Docker
on:
  push:
    branches:
      - develop-spring-boot
  pull_request:
    branches:
      - develop-spring-boot
    types: [opened, synchronize, reopened]

jobs:
  build:
    name: Build, Analyze, and Push Docker Image
    runs-on: ubuntu-latest

    steps:
      # Checkout the repository
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Hola
          
      # Set up JDK 17
      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: 17
          distribution: 'zulu' # Alternative distribution options are available.
          
      # Cache SonarCloud packages
      - name: Cache SonarCloud packages
        uses: actions/cache@v4
        with:
          path: ~/.sonar/cache
          key: ${{ runner.os }}-sonar
          restore-keys: ${{ runner.os }}-sonar
          
      # Cache Maven packages
      - name: Cache Maven packages
        uses: actions/cache@v4
        with:
          path: ~/.m2
          key: ${{ runner.os }}-m2-${{ hashFiles('/pom.xml') }}
          restore-keys: ${{ runner.os }}-m2
          
      # Build and analyze with SonarCloud
      - name: Build and analyze
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}  # Needed to get PR information, if any
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          DATABASE_URL: ${{ secrets.DATABASE_URL }}               # Variable de entorno para la URL de la base de datos
          DATABASE_USERNAME: ${{ secrets.DATABASE_USERNAME }}     # Variable de entorno para el nombre de usuario
          DATABASE_PASSWORD: ${{ secrets.DATABASE_PASSWORD }}     # Variable de entorno para la contrase√±a
        run: |
          mvn -B verify \
            -Dsonar.projectKey=JoseGallardoPadron_AS222S5_T06_be \
            -Dspring.datasource.url=${{ secrets.DATABASE_URL }} \
            -Dspring.datasource.username=${{ secrets.DATABASE_USERNAME }} \
            -Dspring.datasource.password=${{ secrets.DATABASE_PASSWORD }} \
            org.sonarsource.scanner.maven:sonar-maven-plugin:sonar

      # Set up Docker Buildx
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      # Log in to Docker Hub
      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      # Set up QEMU for cross-platform builds (optional)
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2

      # Build the Docker image
      - name: Build Docker Image
        run: |
          docker build --file Dockerfile \
                       --tag jose2506/inteligencia:${{ github.sha }} .

      # Push the Docker image to Docker Hub
      - name: Push Docker Image to Docker Hub
        run: |
          docker tag jose2506/inteligencia:${{ github.sha }} jose2506/inteligencia:latest
          docker push jose2506/inteligencia:${{ github.sha }}
          docker push jose2506/inteligencia:latest
